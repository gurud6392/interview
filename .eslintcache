[{"E:\\Work\\github\\shreyas\\react\\interview\\src\\reportWebVitals.ts":"1","E:\\Work\\github\\shreyas\\react\\interview\\src\\index.tsx":"2","E:\\Work\\github\\shreyas\\react\\interview\\src\\App.tsx":"3","E:\\Work\\github\\shreyas\\react\\interview\\src\\router\\index.tsx":"4","E:\\Work\\github\\shreyas\\react\\interview\\src\\components\\loader\\index.tsx":"5","E:\\Work\\github\\shreyas\\react\\interview\\src\\pages\\home\\index.tsx":"6","E:\\Work\\github\\shreyas\\react\\interview\\src\\pages\\layout\\index.tsx":"7","E:\\Work\\github\\shreyas\\react\\interview\\src\\store\\index.tsx":"8","E:\\Work\\github\\app\\interview\\src\\index.tsx":"9","E:\\Work\\github\\app\\interview\\src\\store\\index.tsx":"10","E:\\Work\\github\\app\\interview\\src\\pages\\home\\index.tsx":"11","E:\\Work\\github\\app\\interview\\src\\router\\index.tsx":"12","E:\\Work\\github\\app\\interview\\src\\pages\\layout\\index.tsx":"13","E:\\Work\\github\\app\\interview\\src\\App.tsx":"14","E:\\Work\\github\\app\\interview\\src\\components\\loader\\index.tsx":"15","E:\\Work\\github\\app\\interview\\src\\pages\\interview\\index.tsx":"16","E:\\Work\\github\\app\\interview\\src\\pages\\interview\\InterviewList.tsx":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":620,"mtime":1607063219149,"results":"20","hashOfConfig":"19"},{"size":340,"mtime":1607014505304,"results":"21","hashOfConfig":"19"},{"size":299,"mtime":1606572192148,"results":"22","hashOfConfig":"19"},{"size":152,"mtime":1606571547474,"results":"23","hashOfConfig":"19"},{"size":129,"mtime":1606572047128,"results":"24","hashOfConfig":"19"},{"size":1644,"mtime":1607066927069,"results":"25","hashOfConfig":"19"},{"size":509,"mtime":1607061720387,"results":"26","hashOfConfig":"19"},{"size":620,"mtime":1607063219149,"results":"27","hashOfConfig":"28"},{"size":509,"mtime":1607061720387,"results":"29","hashOfConfig":"28"},{"size":127,"mtime":1609421443752,"results":"30","hashOfConfig":"28"},{"size":543,"mtime":1609421861619,"results":"31","hashOfConfig":"28"},{"size":1743,"mtime":1607965372068,"results":"32","hashOfConfig":"28"},{"size":340,"mtime":1607014505304,"results":"33","hashOfConfig":"28"},{"size":152,"mtime":1606571547474,"results":"34","hashOfConfig":"28"},{"size":262,"mtime":1609422395122,"results":"35","hashOfConfig":"28"},{"size":3795,"mtime":1609651340114,"results":"36","hashOfConfig":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zgdla5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"e43bhx",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"E:\\Work\\github\\shreyas\\react\\interview\\src\\reportWebVitals.ts",[],"E:\\Work\\github\\shreyas\\react\\interview\\src\\index.tsx",[],["76","77"],"E:\\Work\\github\\shreyas\\react\\interview\\src\\App.tsx",["78","79"],"E:\\Work\\github\\shreyas\\react\\interview\\src\\router\\index.tsx",[],"E:\\Work\\github\\shreyas\\react\\interview\\src\\components\\loader\\index.tsx",[],"E:\\Work\\github\\shreyas\\react\\interview\\src\\pages\\home\\index.tsx",[],"E:\\Work\\github\\shreyas\\react\\interview\\src\\pages\\layout\\index.tsx",[],"E:\\Work\\github\\shreyas\\react\\interview\\src\\store\\index.tsx",[],"E:\\Work\\github\\app\\interview\\src\\index.tsx",[],["80","81"],"E:\\Work\\github\\app\\interview\\src\\store\\index.tsx",[],["82","83"],"E:\\Work\\github\\app\\interview\\src\\pages\\home\\index.tsx",[],"E:\\Work\\github\\app\\interview\\src\\router\\index.tsx",[],"E:\\Work\\github\\app\\interview\\src\\pages\\layout\\index.tsx",[],"E:\\Work\\github\\app\\interview\\src\\App.tsx",["84","85"],"E:\\Work\\github\\app\\interview\\src\\components\\loader\\index.tsx",[],"E:\\Work\\github\\app\\interview\\src\\pages\\interview\\index.tsx",["86"],"import React from 'react';\r\nimport Gist from 'react-gist';\r\nimport data from '../../assets/json/script.json';\r\n\r\nconst Interview = () => {\r\n  return (\r\n    <div>\r\n      <Gist id='b97ada709cf3339f7f157d8a4d420867' />\r\n    </div>\r\n  )\r\n}\r\nexport default Interview;","E:\\Work\\github\\app\\interview\\src\\pages\\interview\\InterviewList.tsx",["87","88","89"],"import React, { useEffect, useState } from 'react';\r\nimport Gist from 'react-gist';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport JSData from '../../assets/json/script.json';\r\nimport { IObject } from '../../interface/IObject';\r\nimport { Params } from '../../interface/IInterviewList';\r\nimport { Button, Col, Row, Typography } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport styles from './interview.module.scss';\r\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\r\nimport { ReplaceQuotes } from '../../helpers/ReplaceQuotes';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst InterviewList = () => {\r\n  const param =  useParams<Params>();\r\n  const [oneData, setOneData] = useState<IObject>();\r\n  const [pagination, setPagination] = useState<IObject>({});\r\n\r\n  useEffect(() => {\r\n    let paramId = param.id;\r\n    let nextId = parseInt(param.id)+1;\r\n    let prevId = parseInt(param.id).valueOf()-1;\r\n    \r\n    let filteredData = JSData.find(el => el.id == paramId);\r\n    let prevData = JSData.find(el => el.id == prevId.toString());\r\n    let nextData = JSData.find(el => el.id == nextId.toString());\r\n    setPagination({prev: prevData, next: nextData})\r\n    setOneData(filteredData);\r\n  }, [param.id]);\r\n  \r\n  const getRenderedCode = () => {\r\n    return oneData && Object.keys(oneData).map((iData, i) => {\r\n      switch (iData) {\r\n        case 'title':\r\n          return <Title key={i}>{oneData.id + \". \"+ oneData[iData]}</Title>;\r\n        case 'paragraph':\r\n          return <Text key={i}><span dangerouslySetInnerHTML={{__html:oneData[iData].replace(/`(.*?)`/g, '<code>$1</code>')}}></span></Text>;\r\n        case 'code':\r\n          return <Gist key={i} id={oneData[iData]} />;\r\n        case 'render':\r\n          return oneData[iData].map((d:IObject) => (\r\n            Object.keys(d).map(rKey => (\r\n              getRenderedElement(rKey, d[rKey])\r\n            ))\r\n          ))          \r\n        default:\r\n          return <></>;\r\n      }\r\n    })\r\n  }\r\n\r\n  const getRenderedElement = (key: string, value: any) => {\r\n    switch (key) {\r\n      case 'code':\r\n        return <Gist id={value} />;\r\n      case 'paragraph':\r\n        return <Text className={styles.interviewList__paragraph}><span dangerouslySetInnerHTML={{__html:ReplaceQuotes(value)}}></span></Text>;\r\n      case 'subtitle':\r\n        return <Title level={value[1]}>{value[0]}</Title>;   \r\n      case 'ulist':\r\n        return <ul>\r\n          {value.map((list:any, i:number) => (\r\n            <li key={i}><Text><span dangerouslySetInnerHTML={{__html:ReplaceQuotes(list)}}></span></Text></li>\r\n          ))}\r\n        </ul>;\r\n      case 'olist':\r\n        return <ol>\r\n          {value.map((list:any, i:number) => (\r\n            <li key={i}><Text><span dangerouslySetInnerHTML={{__html:ReplaceQuotes(list)}}></span></Text></li>\r\n          ))}\r\n        </ol>;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const replaceQuestion = (text: string) => {\r\n    return text.replace('?', '');\r\n  }\r\n\r\n  return (\r\n    <Layout className={styles.interviewList}>\r\n      {getRenderedCode()}\r\n      <Row justify='space-between'>\r\n        \r\n          <Col>\r\n          {pagination.prev ? \r\n            <Link to={`/interview/js/${pagination.prev.id}`}><LeftOutlined/> {replaceQuestion(pagination.prev.title)}</Link>\r\n            :\r\n            <Button type='link' disabled><LeftOutlined/> Previous</Button>\r\n          }\r\n          </Col>\r\n\r\n        \r\n          <Col>\r\n          {pagination.next ? \r\n            <Link to={`/interview/js/${pagination.next.id}`}>{replaceQuestion(pagination.next.title)} <RightOutlined/></Link>\r\n          :\r\n            <Button type='link' disabled>Next <RightOutlined/></Button>\r\n          }\r\n          </Col>\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}\r\nexport default InterviewList;",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":35,"nodeType":"96","messageId":"97","endLine":2,"endColumn":40},{"ruleId":"94","severity":1,"message":"98","line":2,"column":42,"nodeType":"96","messageId":"97","endLine":2,"endColumn":48},{"ruleId":"90","replacedBy":"99"},{"ruleId":"92","replacedBy":"100"},{"ruleId":"90","replacedBy":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":35,"nodeType":"96","messageId":"97","endLine":2,"endColumn":40},{"ruleId":"94","severity":1,"message":"98","line":2,"column":42,"nodeType":"96","messageId":"97","endLine":2,"endColumn":48},{"ruleId":"94","severity":1,"message":"103","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":25,"column":48,"nodeType":"106","messageId":"107","endLine":25,"endColumn":50},{"ruleId":"104","severity":1,"message":"105","line":26,"column":44,"nodeType":"106","messageId":"107","endLine":26,"endColumn":46},{"ruleId":"104","severity":1,"message":"105","line":27,"column":44,"nodeType":"106","messageId":"107","endLine":27,"endColumn":46},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.",["108"],["109"],["108"],["109"],"'data' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]