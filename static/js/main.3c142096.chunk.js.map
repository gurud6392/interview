{"version":3,"sources":["pages/interview/interview.module.scss","components/loader/index.tsx","store/index.tsx","pages/layout/index.tsx","pages/interview/index.tsx","helpers/ReplaceQuotes.ts","pages/interview/InterviewList.tsx","router/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/layout/layout.module.scss"],"names":["module","exports","Loader","style","backgroundColor","actions","setIsLoading","store","isLoading","setState","state","useGlobal","globalHook","React","Header","AntLayout","Sider","Content","Footer","Layout","children","useState","collapsed","setCollapsed","className","styles","layout","sider","trigger","collapsible","mode","defaultSelectedKeys","Item","icon","UserOutlined","VideoCameraOutlined","UploadOutlined","header","padding","onClick","MenuUnfoldOutlined","MenuFoldOutlined","layout__content","textAlign","Interview","id","ReplaceQuotes","text","txt","replace","Title","Typography","Text","InterviewList","param","useParams","oneData","setOneData","pagination","setPagination","useEffect","paramId","nextId","parseInt","prevId","valueOf","filteredData","JSData","find","el","prevData","toString","nextData","prev","next","getRenderedElement","key","value","interviewList__paragraph","dangerouslySetInnerHTML","__html","level","map","list","i","replaceQuestion","interviewList","Object","keys","iData","d","rKey","justify","to","LeftOutlined","title","type","disabled","RightOutlined","Home","lazy","Routers","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.3c142096.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"interviewList\":\"interview_interviewList__B6QQb\",\"interviewList__paragraph\":\"interview_interviewList__paragraph__3XlLF\"};","import React from 'react';\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<div style={{backgroundColor: 'red'}}>Fallback</div>\r\n\t)\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport globalHook, {Store} from 'use-global-hook';\r\n\r\ninterface State {\r\n  isLoading: boolean;\r\n}\r\n\r\ntype Action = {\r\n  setIsLoading: (isLoading: boolean) => void;\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoading: false,\r\n}\r\n\r\nconst actions = {\r\n  setIsLoading: (store: Store<State, Action>, isLoading: boolean) => {\r\n    store.setState({...store.state, isLoading});\r\n  }\r\n}\r\n\r\nconst useGlobal = globalHook<State, Action>(React, initialState, actions);\r\n\r\nexport default useGlobal;","import React, { FC, useState } from 'react';\r\nimport { Layout as AntLayout, Menu } from 'antd';\r\nimport Loader from '../../components/loader';\r\nimport useGlobal from '../../store';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport styles from './layout.module.scss';\r\n\r\nconst { Header, Sider, Content, Footer } = AntLayout;\r\n\r\nconst Layout:FC = ({children}) => {\r\n\tconst [collapsed, setCollapsed] = useState<boolean>(true);\r\n\r\n\tconst [{isLoading}] = useGlobal();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading && <Loader/>}\r\n\t\t\t<AntLayout className={styles.layout}>\r\n        <Sider className={styles.sider} trigger={null} collapsible collapsed={collapsed}>\r\n          <div className=\"logo\" />\r\n          <Menu mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n              nav 1\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n              nav 2\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n              nav 3\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <AntLayout className=\"site-layout\">\r\n          <Header className={styles.header} style={{ padding: 0 }}>\r\n\t\t\t\t\t\t<span className='trigger' onClick = {() => setCollapsed(!collapsed)}>\r\n\t\t\t\t\t\t\t{collapsed ? <MenuUnfoldOutlined/> : <MenuFoldOutlined/>}\r\n\t\t\t\t\t\t</span>\r\n          </Header>\r\n          <Content className={styles.layout__content}>\r\n            {children}\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>2000 copy</Footer>\r\n        </AntLayout>\r\n      </AntLayout>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport Gist from 'react-gist';\r\nimport data from '../../assets/json/script.json';\r\n\r\nconst Interview = () => {\r\n  return (\r\n    <div>\r\n      <Gist id='b97ada709cf3339f7f157d8a4d420867' />\r\n    </div>\r\n  )\r\n}\r\nexport default Interview;","export const ReplaceQuotes = (text:string) => {\r\n  let txt = text;\r\n    // Replace backtick with <code> tag\r\n    txt = txt.replace(/`(.*?)`/g, '<code>$1</code>');\r\n    // Replace double asterisk with <strong> tag\r\n    txt = txt.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n    // Replace single asterisk with <em> tag\r\n    txt = txt.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\r\n\r\n    return txt;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Gist from 'react-gist';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport JSData from '../../assets/json/script.json';\r\nimport { IObject } from '../../interface/IObject';\r\nimport { Params } from '../../interface/IInterviewList';\r\nimport { Button, Col, Row, Typography } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport styles from './interview.module.scss';\r\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\r\nimport { ReplaceQuotes } from '../../helpers/ReplaceQuotes';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst InterviewList = () => {\r\n  const param =  useParams<Params>();\r\n  const [oneData, setOneData] = useState<IObject>();\r\n  const [pagination, setPagination] = useState<IObject>({});\r\n\r\n  useEffect(() => {\r\n    let paramId = param.id;\r\n    let nextId = parseInt(param.id)+1;\r\n    let prevId = parseInt(param.id).valueOf()-1;\r\n    \r\n    let filteredData = JSData.find(el => el.id == paramId);\r\n    let prevData = JSData.find(el => el.id == prevId.toString());\r\n    let nextData = JSData.find(el => el.id == nextId.toString());\r\n    setPagination({prev: prevData, next: nextData})\r\n    setOneData(filteredData);\r\n  }, [param.id]);\r\n  \r\n  const getRenderedCode = () => {\r\n    return oneData && Object.keys(oneData).map((iData, i) => {\r\n      switch (iData) {\r\n        case 'title':\r\n          return <Title key={i}>{oneData.id + \". \"+ oneData[iData]}</Title>;\r\n        case 'paragraph':\r\n          return <Text key={i}><span dangerouslySetInnerHTML={{__html:oneData[iData].replace(/`(.*?)`/g, '<code>$1</code>')}}></span></Text>;\r\n        case 'code':\r\n          return <Gist key={i} id={oneData[iData]} />;\r\n        case 'render':\r\n          return oneData[iData].map((d:IObject) => (\r\n            Object.keys(d).map(rKey => (\r\n              getRenderedElement(rKey, d[rKey])\r\n            ))\r\n          ))          \r\n        default:\r\n          return <></>;\r\n      }\r\n    })\r\n  }\r\n\r\n  const getRenderedElement = (key: string, value: any) => {\r\n    switch (key) {\r\n      case 'code':\r\n        return <Gist id={value} />;\r\n      case 'paragraph':\r\n        return <Text className={styles.interviewList__paragraph}><span dangerouslySetInnerHTML={{__html:ReplaceQuotes(value)}}></span></Text>;\r\n      case 'subtitle':\r\n        return <Title level={value[1]}>{value[0]}</Title>;   \r\n      case 'ulist':\r\n        return <ul>\r\n          {value.map((list:any, i:number) => (\r\n            <li key={i}><Text><span dangerouslySetInnerHTML={{__html:ReplaceQuotes(list)}}></span></Text></li>\r\n          ))}\r\n        </ul>;\r\n      case 'olist':\r\n        return <ol>\r\n          {value.map((list:any, i:number) => (\r\n            <li key={i}><Text><span dangerouslySetInnerHTML={{__html:ReplaceQuotes(list)}}></span></Text></li>\r\n          ))}\r\n        </ol>;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const replaceQuestion = (text: string) => {\r\n    return text.replace('?', '');\r\n  }\r\n\r\n  return (\r\n    <Layout className={styles.interviewList}>\r\n      {getRenderedCode()}\r\n      <Row justify='space-between'>\r\n        \r\n          <Col>\r\n          {pagination.prev ? \r\n            <Link to={`/interview/js/${pagination.prev.id}`}><LeftOutlined/> {replaceQuestion(pagination.prev.title)}</Link>\r\n            :\r\n            <Button type='link' disabled><LeftOutlined/> Previous</Button>\r\n          }\r\n          </Col>\r\n\r\n        \r\n          <Col>\r\n          {pagination.next ? \r\n            <Link to={`/interview/js/${pagination.next.id}`}>{replaceQuestion(pagination.next.title)} <RightOutlined/></Link>\r\n          :\r\n            <Button type='link' disabled>Next <RightOutlined/></Button>\r\n          }\r\n          </Col>\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}\r\nexport default InterviewList;","import React, { lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Interview from '../pages/interview';\r\nimport InterviewList from '../pages/interview/InterviewList';\r\n\r\nconst Home = lazy(() => import('../pages/home'));\r\n\r\nconst Routers = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path='/' component={Home} />\r\n\t\t\t\t<Route exact path='/interview' component={Interview} />\r\n\t\t\t\t<Route exact path='/interview/:type/:id' component={InterviewList} />\r\n\t\t\t</Switch>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Routers;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Layout from './pages/layout';\nimport Routers from './router';\n\nconst App = () => {\n  return (\n    <div>\n      <Router>\n        <Layout>\n          <Routers />\n        </Layout>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.less'\nimport 'antd/dist/antd.css';\nimport Loader from './components/loader';\nimport './index.scss';\n\nReactDOM.render(\n  <Suspense fallback={<Loader/>}>\n    <App />\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout__content\":\"layout_layout__content__3_V6t\",\"header\":\"layout_header__3pw2v\",\"sider\":\"layout_sider__2e2q5\"};"],"sourceRoot":""}